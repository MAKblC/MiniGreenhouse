#include <WiFi.h>
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>
WiFiClientSecure secured_client;
unsigned long bot_lasttime;
const unsigned long BOT_MTBS = 1000; // –ø–µ—Ä–∏–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

// –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–µ—Ç–∏
#define WIFI_SSID "MGBot"
#define WIFI_PASSWORD "Terminator812"
// —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
#define BOT_TOKEN "917994990:AAEzww06oDul4JbgaWpO7ooDvr-RPiM4PUc"
UniversalTelegramBot bot(BOT_TOKEN, secured_client);

// —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ—Å—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
String test_photo_url = "https://mgbot.ru/upload/logo-r.png";
// –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç —Å –ø–æ–º–æ—â—å—é InlineKeyboard
String keyboardJson1 = "[[{ \"text\" : \"–í–∞—à —Å–∞–π—Ç\", \"url\" : \"https://mgbot.ru\" }],[{ \"text\" : \"–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç IoTik.ru\", \"url\" : \"https://www.iotik.ru\" }]]";

#include <Wire.h>

#define pump 13  // –ø–∏–Ω –Ω–∞—Å–æ—Å–∞ 
#define led 4    //  –ø–∏–Ω —Å–≤–µ—Ç–æ–¥–∏–æ–¥–Ω–æ–π –ª–µ–Ω—Ç—ã

#include <BH1750.h>  // –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–∞—Ç—á–∏–∫–∞ –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏ 
BH1750 lightMeter;   

#include <Adafruit_Sensor.h>  // –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–∞—Ç—á–∏–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã, –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –∏ –¥–∞–≤–ª–µ–Ω–∏—è 
#include <Adafruit_BME280.h>  
Adafruit_BME280 bme280;      

#define SOIL_MOISTURE 32     // –ø–∏–Ω—ã –¥–∞—Ç—á–∏–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –ø–æ—á–≤—ã
#define SOIL_TEMPERATURE 33  
// –æ—Ç–∫–∞–ª–∏–±—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
const float air_value = 1587.0;
const float water_value = 800.0;
const float moisture_0 = 0.0;
const float moisture_100 = 100.0;

void setup() {
  Wire.begin();

  pinMode(pump, OUTPUT);
  pinMode(led, OUTPUT);

  Serial.begin(115200);
  delay(512);

  lightMeter.begin();  // –∑–∞–ø—É—Å–∫ –¥–∞—Ç—á–∏–∫–∞ –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏ 

  // —Å–º–µ–Ω–∞ –∫–∞–Ω–∞–ª–∞ I2C
  setBusChannel(0x07);
  //–∑–∞–ø—É—Å–∫ –¥–∞—Ç—á–∏–∫–∞ MGS-THP80
  bool bme_status = bme280.begin();
  if (!bme_status) {
    Serial.println("–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É 0—Ö77, –ø—Ä–æ–±—É—é –¥—Ä—É–≥–æ–π...");
    bme_status = bme280.begin(0x76);
    if (!bme_status)
      Serial.println("–î–∞—Ç—á–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ");
  }

  Serial.println();
  Serial.print("–ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ Wifi: ");
  Serial.print(WIFI_SSID);
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  secured_client.setCACert(TELEGRAM_CERTIFICATE_ROOT);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.print("\nWiFi –ø–æ–¥–∫–ª—é—á–µ–Ω. IP –∞–¥—Ä–µ—Å: ");
  Serial.println(WiFi.localIP());
}

// –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
void handleNewMessages(int numNewMessages) {
  Serial.print("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è ");
  Serial.println(numNewMessages);

  for (int i = 0; i < numNewMessages; i++) {
    String chat_id = bot.messages[i].chat_id;
    String text = bot.messages[i].text;
    text.toLowerCase();
    String from_name = bot.messages[i].from_name;
    if (from_name == "")
      from_name = "Guest";
    // –≤—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–∏—à–µ–¥—à–µ–π –∫–æ–º–∞–Ω–¥—ã
    if (text == "/sensors")  // –∏–∑–º–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
    {
      float l = lightMeter.readLightLevel();
      setBusChannel(0x07);
      float t = bme280.readTemperature();
      float h = bme280.readHumidity();
      float p = bme280.readPressure() / 133.3F;
      float adc0 = analogRead(SOIL_MOISTURE);
      float adc1 = analogRead(SOIL_TEMPERATURE);
      float t1 = ((adc1 / 4095.0 * 6.27) - 0.5) * 100.0;  // –ê–¶–ü —Ä–∞–∑—Ä—è–¥–Ω–æ—Å—Ç—å (12) = 4095 –∏ –∫–æ—ç—Ñ. –¥–ª—è –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è ~4,45–í
      float h1 = map(adc0, air_value, water_value, moisture_0, moisture_100);

      String welcome = "–ü–æ–∫–∞–∑–∞–Ω–∏—è –¥–∞—Ç—á–∏–∫–æ–≤:\n-------------------------------------------\n";
      welcome += "üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: " + String(t, 1) + " ¬∞C\n";
      welcome += "üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞: " + String(h, 0) + " %\n";
      welcome += "‚òÅ –ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ: " + String(p, 0) + " –º–º —Ä—Ç.—Å—Ç.\n";
      welcome += "‚òÄ –û—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å: " + String(l) + " –õ–∫\n\n";
      welcome += "üå± –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ—á–≤—ã: " + String(t1, 1) + " ¬∞C\n";
      welcome += "üå± –í–ª–∞–∂–Ω–æ—Å—Ç—å –ø–æ—á–≤—ã: " + String(h1, 0) + " %\n\n";
      bot.sendMessage(chat_id, welcome, "Markdown");
    }

    if (text == "/photo") {  // –ø–æ—Å—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
      bot.sendPhoto(chat_id, test_photo_url, "–∞ –≤–æ—Ç –∏ —Ñ–æ—Ç–∫–∞!");
    }

    if (text == "/pumpon") {
      digitalWrite(pump, HIGH);
      delay(1000);
      bot.sendMessage(chat_id, "–ù–∞—Å–æ—Å –≤–∫–ª—é—á–µ–Ω –Ω–∞ 1 —Å–µ–∫", "");
      digitalWrite(pump, LOW);
    }
    if (text == "/ledon") {
      digitalWrite(led, HIGH);
      bot.sendMessage(chat_id, "–û—Å–≤–µ—â–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ", "");
    }
    if (text == "/ledoff") {
      digitalWrite(led, LOW);
      bot.sendMessage(chat_id, "–û—Å–≤–µ—â–µ–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ", "");
    }

    if (text == "/site")  // –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –¥–∏–∞–ª–æ–≥–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç
    {
      bot.sendMessageWithInlineKeyboard(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", "", keyboardJson1);
    }
    if (text == "/options")  // –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ø–ª–∏—Ü–µ–π
    {
      String keyboardJson = "[[\"/sensors\"],[\"/pumpon\", \"/ledon\", \"/ledoff\"]]";
      bot.sendMessageWithReplyKeyboard(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É", "", keyboardJson, true);
    }

    if (text == "/start" || text == "/help")  // –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –ø–æ–º–æ—â–∏
    {
      String sms = "–ü—Ä–∏–≤–µ—Ç, " + from_name + "!\n\n";
      sms += "–Ø –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ô–æ—Ç–∏–∫ 32. –ö–æ–º–∞–Ω–¥—ã —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –º–µ–Ω—é —Å–ª–µ–≤–∞ –æ—Ç —Å—Ç—Ä–æ–∫–∏ –≤–≤–æ–¥–∞\n";
      sms = "–ö–æ–º–∞–Ω–¥—ã:\n";
      sms += "/options - –ø—É–ª—å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ø–ª–∏—Ü–µ–π\n";
      sms += "/site - –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç\n";
      sms += "/photo - –∑–∞–ø–æ—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ\n";
      sms += "/help - –≤—ã–∑–≤–∞—Ç—å –ø–æ–º–æ—â—å\n";
      bot.sendMessage(chat_id, sms, "");
    }
  }
}

void loop()  // –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥
{
  if (millis() - bot_lasttime > BOT_MTBS) {
    int numNewMessages = bot.getUpdates(bot.last_message_received + 1);

    while (numNewMessages) {
      Serial.println("got response");
      handleNewMessages(numNewMessages);
      numNewMessages = bot.getUpdates(bot.last_message_received + 1);
    }

    bot_lasttime = millis();
  }
}

bool setBusChannel(uint8_t i2c_channel) {
  if (i2c_channel >= 0x08) {
    return false;
  } else {
    Wire.beginTransmission(0x70);
    // –¥–ª—è –º–∏–∫—Ä–æ—Å—Ö–µ–º—ã PCA9547
    Wire.write(i2c_channel | 0x08);
    // –î–ª—è –º–∏–∫—Ä–æ—Å—Ö–µ–º—ã PW548A
    // Wire.write(0x01 << i2c_channel); 
    Wire.endTransmission();
    return true;
  }
}